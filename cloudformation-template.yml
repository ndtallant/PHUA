AWSTemplateFormatVersion: 2010-09-09
Description:  A CPU Utilization Alarm and  accompanying SNS topic.

Parameters:
  DBInstanceID:
    Description: "RDS Instance ID"
    Type: String
    #TopicEmail:
    #  Description: "An email address to send high CPU alerts to"
    #  Type: String

Resources:

  # See RDS metrics: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/monitoring-cloudwatch.html
  # Or w/ the CLI: `aws cloudwatch list-metrics --namespace AWS/RDS`
  AlarmForHighCPU:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: CPU alarm for RDS
      AlarmActions: !Ref Topic
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '3'
      Threshold: '80'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstanceID

  Topic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: "High RDS CPU Topic"

  Subscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !GetAtt
        - Function
        - Arn
      Protocol: lambda
      TopicArn: !Ref Topic
    DependsOn:
      - Function

  LambdaInvokePermissionForSNSTopic:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: sns.amazonaws.com
      FunctionName: !GetAtt
        - Function
        - Arn
      SourceArn: !Ref Topic

  Function:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_func.event_handler
      Runtime: python3.8
      Code: .
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Timeout: '30'
    DependsOn:
      - LambdaExecutionRole

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Description: "Allows a Lambda Function to receive messages from an SNS topic, read from RDS, and write logs."
    Properties:
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - 'arn:aws:logs:*:*:*'
                Effect: Allow
              - Action:
                  - 'sns:Subscribe'
                  - 'sns:Receive'
                  - 'sns:Unsubscribe'
                Resource: !Ref Topic
                Effect: Allow
              - Action:
                  - 'dynamodb:PutItem'
                Resource: !GetAtt
                  - DynamoDBTable
                  - Arn
                Effect: Allow
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

